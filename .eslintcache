[{"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\index.js":"1","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\reportWebVitals.js":"2","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\App.js":"3","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\firebaseConfig.js":"4","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\ChatRoom.js":"5","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\ChatMessage.js":"6","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\LoginForm.js":"7","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\NewMessageForm.js":"8"},{"size":478,"mtime":1607193320591,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1681,"mtime":1607432420485,"results":"12","hashOfConfig":"10"},{"size":492,"mtime":1607196674499,"results":"13","hashOfConfig":"10"},{"size":2066,"mtime":1607432565102,"results":"14","hashOfConfig":"10"},{"size":444,"mtime":1607286765814,"results":"15","hashOfConfig":"10"},{"size":1536,"mtime":1607532887769,"results":"16","hashOfConfig":"10"},{"size":698,"mtime":1607533235737,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1be9bqs",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\index.js",[],["37","38"],"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\reportWebVitals.js",[],"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\App.js",["39","40"],"import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport firebase from 'firebase';\r\nimport {firestore} from './firebaseConfig';\r\nimport ChatRoom from './comps/ChatRoom';\r\nimport LoginForm from './comps/LoginForm';\r\n\r\nfunction App() {\r\n    const [username, setUsername] = useState('');\r\n\r\n    const [formValue, setFormValue] = useState('');\r\n    \r\n    const messagesRef = firestore.collection('messages');\r\n    const usersRef = firestore.collection('users');\r\n\r\n    const updateMessage = (e) => {\r\n        setFormValue(e.target.value);\r\n    }\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (formValue === '')\r\n        {\r\n            return;\r\n        }\r\n\r\n        e.target.reset();\r\n\r\n        await messagesRef.add({\r\n            text: formValue,\r\n            sender: username,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()            \r\n        });\r\n\r\n        setFormValue('');\r\n    }\r\n\r\n    useEffect(() => { // Everytime the username updates and isn't empty\r\n        username != \"\" && addUsernameToDatabase();\r\n    }, [username]);\r\n\r\n    const addUsernameToDatabase = async () => {\r\n        await usersRef.add({\r\n            name: username,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()   \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\" style={{justifyContent: username ? \"space-between\" : \"center\"}}>\r\n            {username ? <ChatRoom messagesRef={messagesRef} sendMessage={sendMessage} updateMessage={updateMessage} username={username}/> : <LoginForm setUsername={setUsername} usersRef={usersRef}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\firebaseConfig.js",[],"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\ChatRoom.js",["41"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport ChatMessage from './ChatMessage';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\nfunction ChatRoom({messagesRef, sendMessage, updateMessage, username}) {    \r\n    const messagesDivRef = useRef(null);\r\n    //let realtimeMessaging = useRef(true);\r\n    const [realtimeMessaging, setRealtimeMessaging] = useState(true);\r\n\r\n    const query = messagesRef.orderBy('createdAt');\r\n\r\n    const [messages] = useCollectionData(query, {idField: 'id'});\r\n\r\n    // Scrolling to the bottom of the chatroom when a new message is posted if realtime messaging is enabled\r\n    useEffect(() => {\r\n        if (messagesDivRef.current && realtimeMessaging === false)\r\n        {\r\n            goToBottom();\r\n        }\r\n    }, [messages]);\r\n\r\n    // Disableing realtime messaging    \r\n    const displayDownArrow = () => {       \r\n        if (messagesDivRef.current != null && (messagesDivRef.current.scrollTop + messagesDivRef.current.offsetHeight) === messagesDivRef.current.scrollHeight)\r\n        {\r\n            setRealtimeMessaging(false);\r\n            //console.log(\"Set to false\");\r\n        }\r\n        else\r\n        {\r\n            setRealtimeMessaging(true);\r\n            //console.log(\"Set to true\");\r\n        }\r\n    }\r\n\r\n    const goToBottom = () => {\r\n        messagesDivRef.current.scrollTop = messagesDivRef.current.scrollHeight;\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-room\">\r\n            <div className=\"messages\" ref={messagesDivRef} onScroll={displayDownArrow}>\r\n                {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} username={username}/>)}\r\n            </div>\r\n\r\n            {<button className=\"enable-realtime-messaging-button\" onClick={goToBottom} style={{opacity: realtimeMessaging ? \"1\" : \"0\"}}><i className=\"fas fa-arrow-down\"></i></button>}\r\n\r\n            <NewMessageForm sendMessage={sendMessage} updateMessage={updateMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;\r\n","D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\ChatMessage.js",[],"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\LoginForm.js",["42"],"D:\\Websites\\ReactProjects\\multi-language-chat-app\\src\\comps\\NewMessageForm.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":40,"column":18,"nodeType":"49","messageId":"50","endLine":40,"endColumn":20},{"ruleId":"51","severity":1,"message":"52","line":41,"column":8,"nodeType":"53","endLine":41,"endColumn":18,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":21,"column":8,"nodeType":"53","endLine":21,"endColumn":18,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":24,"nodeType":"59","messageId":"60","endLine":9,"endColumn":37},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addUsernameToDatabase'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'realtimeMessaging'. Either include it or remove the dependency array.",["64"],"no-unused-vars","'setHasAccount' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [addUsernameToDatabase, username]",{"range":"69","text":"70"},"Update the dependencies array to be: [messages, realtimeMessaging]",{"range":"71","text":"72"},[1104,1114],"[addUsernameToDatabase, username]",[839,849],"[messages, realtimeMessaging]"]